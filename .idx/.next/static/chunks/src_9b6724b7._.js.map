{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/extract-prescription-details.ts"],"sourcesContent":["'use server';\n\n/**\n * @fileOverview Extracts medicine details (name, dosage, frequency, etc.) from a prescription image.\n *\n * - extractPrescriptionDetails -  A function that handles the prescription details extraction process.\n * - ExtractPrescriptionDetailsInput - The input type for the extractPrescriptionDetails function.\n * - ExtractPrescriptionDetailsOutput - The return type for the extractPrescriptionDetails function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst ExtractPrescriptionDetailsInputSchema = z.object({\n  prescriptionImage: z\n    .string()\n    .describe(\n      \"A photo of a handwritten prescription, as a data URI that must include a MIME type and use Base64 encoding. Expected format: 'data:<mimetype>;base64,<encoded_data>'.\"\n    ),\n});\nexport type ExtractPrescriptionDetailsInput = z.infer<\n  typeof ExtractPrescriptionDetailsInputSchema\n>;\n\nconst MedicineDetailsSchema = z.object({\n  medicineName: z.string().describe('The name of the medicine.'),\n  dosage: z.string().describe('The dosage of the medicine (e.g., 500mg).'),\n  frequency: z\n    .string()\n    .describe('How often the medicine should be taken (e.g., twice daily).'),\n  duration: z\n    .string()\n    .describe('How long the medicine should be taken for (e.g. 7 days).')\n    .optional(),\n  routeOfAdministration: z\n    .string()\n    .describe('How the medicine should be administered (e.g. orally, topical).')\n    .optional(),\n  instructions: z\n    .string()\n    .describe('Any special instructions (e.g., with food, before bed).')\n    .optional(),\n});\n\nconst ExtractPrescriptionDetailsOutputSchema = z.object({\n  medicines: z.array(MedicineDetailsSchema).describe('List of extracted medicines with details.'),\n  doctorName: z.string().describe('The name of the doctor.').optional(),\n  clinicInformation: z.string().describe('The clinic information.').optional(),\n  patientName: z.string().describe('The patient name.').optional(),\n  dateOfPrescription: z.string().describe('The date of the prescription.').optional(),\n});\nexport type ExtractPrescriptionDetailsOutput = z.infer<\n  typeof ExtractPrescriptionDetailsOutputSchema\n>;\n\nexport async function extractPrescriptionDetails(\n  input: ExtractPrescriptionDetailsInput\n): Promise<ExtractPrescriptionDetailsOutput> {\n  return extractPrescriptionDetailsFlow(input);\n}\n\nconst extractPrescriptionDetailsPrompt = ai.definePrompt({\n  name: 'extractPrescriptionDetailsPrompt',\n  input: {schema: ExtractPrescriptionDetailsInputSchema},\n  output: {schema: ExtractPrescriptionDetailsOutputSchema},\n  prompt: `You are a medical expert extracting information from a prescription image.\n  Extract the following information for each prescribed item:\n  - Medicine Name\n  - Dosage\n  - Frequency\n  - Duration (if available)\n  - Route of Administration (if available)\n  - Instructions (if available)\n\n  Also, attempt to extract:\n  - Doctor's Name\n  - Clinic Information\n  - Patient Name (if available)\n  - Date of Prescription (if available)\n\n  Structure the output clearly, associating all details with the respective medicine.\n\n  Prescription Image: {{media url=prescriptionImage}}\n  `,\n});\n\nconst extractPrescriptionDetailsFlow = ai.defineFlow(\n  {\n    name: 'extractPrescriptionDetailsFlow',\n    inputSchema: ExtractPrescriptionDetailsInputSchema,\n    outputSchema: ExtractPrescriptionDetailsOutputSchema,\n  },\n  async input => {\n    const {output} = await extractPrescriptionDetailsPrompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":";;;;;IAuDsB","debugId":null}},
    {"offset": {"line": 19, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/app-logo.tsx"],"sourcesContent":["import { NotebookPen } from 'lucide-react';\nimport React from 'react';\n\ninterface AppLogoProps {\n  className?: string;\n  iconSize?: number;\n  textSize?: string;\n}\n\nconst AppLogo: React.FC<AppLogoProps> = ({ className = '', iconSize = 32, textSize = 'text-3xl' }) => {\n  return (\n    <div className={`flex items-center gap-3 text-primary ${className}`}>\n      <NotebookPen size={iconSize} strokeWidth={2} />\n      <h1 className={`font-bold ${textSize} tracking-tight`}>ScriptAssist</h1>\n    </div>\n  );\n};\n\nexport default AppLogo;\n"],"names":[],"mappings":";;;;AAAA;;;AASA,MAAM,UAAkC,CAAC,EAAE,YAAY,EAAE,EAAE,WAAW,EAAE,EAAE,WAAW,UAAU,EAAE;IAC/F,qBACE,6LAAC;QAAI,WAAW,CAAC,qCAAqC,EAAE,WAAW;;0BACjE,6LAAC,uNAAA,CAAA,cAAW;gBAAC,MAAM;gBAAU,aAAa;;;;;;0BAC1C,6LAAC;gBAAG,WAAW,CAAC,UAAU,EAAE,SAAS,eAAe,CAAC;0BAAE;;;;;;;;;;;;AAG7D;KAPM;uCASS","debugId":null}},
    {"offset": {"line": 66, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,4VACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 133, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/screens/upload-screen.tsx"],"sourcesContent":["import React from 'react';\nimport AppLogo from '@/components/app-logo';\nimport { Button } from '@/components/ui/button';\nimport { UploadCloud, Camera } from 'lucide-react';\n\ninterface UploadScreenProps {\n  onFileUpload: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  fileInputRef: React.RefObject<HTMLInputElement>;\n  onOpenCamera: () => void;\n}\n\nconst UploadScreen: React.FC<UploadScreenProps> = ({ onFileUpload, fileInputRef, onOpenCamera }) => {\n  const triggerFileSelect = () => fileInputRef.current?.click();\n\n  return (\n    <div className=\"flex flex-col items-center justify-center text-center p-8 sm:p-10 rounded-xl shadow-2xl bg-card border border-border/50 w-full max-w-md mx-auto\">\n      <AppLogo className=\"mb-6 text-primary\" iconSize={48} textSize=\"text-4xl\" />\n      <h2 className=\"text-2xl font-semibold text-foreground mb-3\">\n        Instant Prescription Decoder\n      </h2>\n      <p className=\"text-muted-foreground mb-10 text-base max-w-xs\">\n        Snap a photo or upload an image of your prescription to get quick insights.\n      </p>\n      \n      <input\n        type=\"file\"\n        accept=\"image/*\"\n        onChange={onFileUpload}\n        ref={fileInputRef}\n        className=\"hidden\"\n        id=\"prescriptionUpload\"\n      />\n\n      <div className=\"w-full max-w-sm space-y-4\">\n        <Button \n          onClick={onOpenCamera}\n          size=\"lg\" \n          className=\"w-full text-lg py-6 rounded-lg shadow-md hover:shadow-lg transition-all duration-300 ease-in-out bg-primary hover:bg-primary/90 text-primary-foreground transform hover:scale-105 focus:outline-none focus:ring-4 focus:ring-primary/30\"\n          aria-label=\"Capture with Camera\"\n        >\n          <Camera size={28} className=\"mr-3\" />\n          Capture with Camera\n        </Button>\n\n        <Button \n          onClick={triggerFileSelect} \n          size=\"lg\" \n          variant=\"outline\"\n          className=\"w-full text-lg py-6 rounded-lg shadow-md hover:shadow-lg transition-all duration-300 ease-in-out border-primary text-primary hover:bg-primary/10 transform hover:scale-105 focus:outline-none focus:ring-4 focus:ring-primary/30\"\n          aria-label=\"Upload Image from Gallery\"\n        >\n          <UploadCloud size={28} className=\"mr-3\" />\n          Upload from Gallery\n        </Button>\n      </div>\n      \n      <p className=\"text-xs text-muted-foreground mt-8 px-4\">\n        Ensure the image is clear and well-lit for best results. Max file size: 4MB.\n      </p>\n    </div>\n  );\n};\n\nexport default UploadScreen;\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;AAAA;;;;;AAQA,MAAM,eAA4C,CAAC,EAAE,YAAY,EAAE,YAAY,EAAE,YAAY,EAAE;IAC7F,MAAM,oBAAoB,IAAM,aAAa,OAAO,EAAE;IAEtD,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC,oIAAA,CAAA,UAAO;gBAAC,WAAU;gBAAoB,UAAU;gBAAI,UAAS;;;;;;0BAC9D,6LAAC;gBAAG,WAAU;0BAA8C;;;;;;0BAG5D,6LAAC;gBAAE,WAAU;0BAAiD;;;;;;0BAI9D,6LAAC;gBACC,MAAK;gBACL,QAAO;gBACP,UAAU;gBACV,KAAK;gBACL,WAAU;gBACV,IAAG;;;;;;0BAGL,6LAAC;gBAAI,WAAU;;kCACb,6LAAC,qIAAA,CAAA,SAAM;wBACL,SAAS;wBACT,MAAK;wBACL,WAAU;wBACV,cAAW;;0CAEX,6LAAC,yMAAA,CAAA,SAAM;gCAAC,MAAM;gCAAI,WAAU;;;;;;4BAAS;;;;;;;kCAIvC,6LAAC,qIAAA,CAAA,SAAM;wBACL,SAAS;wBACT,MAAK;wBACL,SAAQ;wBACR,WAAU;wBACV,cAAW;;0CAEX,6LAAC,uNAAA,CAAA,cAAW;gCAAC,MAAM;gCAAI,WAAU;;;;;;4BAAS;;;;;;;;;;;;;0BAK9C,6LAAC;gBAAE,WAAU;0BAA0C;;;;;;;;;;;;AAK7D;KAlDM;uCAoDS","debugId":null}},
    {"offset": {"line": 267, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 370, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/screens/image-preview-screen.tsx"],"sourcesContent":["import React from 'react';\nimport Image from 'next/image';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';\nimport { ScanLine, RotateCcw } from 'lucide-react';\n\ninterface ImagePreviewScreenProps {\n  imageDataUri: string;\n  onAnalyze: () => void;\n  onRetake: () => void;\n}\n\nconst ImagePreviewScreen: React.FC<ImagePreviewScreenProps> = ({ imageDataUri, onAnalyze, onRetake }) => {\n  return (\n    <Card className=\"w-full shadow-xl\">\n      <CardHeader>\n        <CardTitle className=\"text-2xl text-center\">Verify Your Prescription</CardTitle>\n      </CardHeader>\n      <CardContent className=\"flex flex-col items-center space-y-6\">\n        <div className=\"w-full max-w-md aspect-[4/3] relative rounded-lg overflow-hidden border-2 border-primary shadow-inner\">\n          <Image \n            src={imageDataUri} \n            alt=\"Uploaded Prescription\" \n            fill\n            style={{ objectFit: 'contain' }}\n            data-ai-hint=\"medical prescription\"\n          />\n        </div>\n        <p className=\"text-sm text-muted-foreground text-center\">\n          Ensure the image is clear, well-lit, and the entire prescription is visible.\n        </p>\n      </CardContent>\n      <CardFooter className=\"flex flex-col sm:flex-row justify-center gap-4 p-6\">\n        <Button onClick={onRetake} variant=\"outline\" size=\"lg\" className=\"w-full sm:w-auto\">\n          <RotateCcw size={20} className=\"mr-2\" />\n          Retake or Choose Different\n        </Button>\n        <Button onClick={onAnalyze} size=\"lg\" className=\"w-full sm:w-auto bg-accent hover:bg-accent/90 text-accent-foreground\">\n          <ScanLine size={20} className=\"mr-2\" />\n          Analyze Prescription\n        </Button>\n      </CardFooter>\n    </Card>\n  );\n};\n\nexport default ImagePreviewScreen;\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;AACA;AAAA;;;;;;AAQA,MAAM,qBAAwD,CAAC,EAAE,YAAY,EAAE,SAAS,EAAE,QAAQ,EAAE;IAClG,qBACE,6LAAC,mIAAA,CAAA,OAAI;QAAC,WAAU;;0BACd,6LAAC,mIAAA,CAAA,aAAU;0BACT,cAAA,6LAAC,mIAAA,CAAA,YAAS;oBAAC,WAAU;8BAAuB;;;;;;;;;;;0BAE9C,6LAAC,mIAAA,CAAA,cAAW;gBAAC,WAAU;;kCACrB,6LAAC;wBAAI,WAAU;kCACb,cAAA,6LAAC,gIAAA,CAAA,UAAK;4BACJ,KAAK;4BACL,KAAI;4BACJ,IAAI;4BACJ,OAAO;gCAAE,WAAW;4BAAU;4BAC9B,gBAAa;;;;;;;;;;;kCAGjB,6LAAC;wBAAE,WAAU;kCAA4C;;;;;;;;;;;;0BAI3D,6LAAC,mIAAA,CAAA,aAAU;gBAAC,WAAU;;kCACpB,6LAAC,qIAAA,CAAA,SAAM;wBAAC,SAAS;wBAAU,SAAQ;wBAAU,MAAK;wBAAK,WAAU;;0CAC/D,6LAAC,mNAAA,CAAA,YAAS;gCAAC,MAAM;gCAAI,WAAU;;;;;;4BAAS;;;;;;;kCAG1C,6LAAC,qIAAA,CAAA,SAAM;wBAAC,SAAS;wBAAW,MAAK;wBAAK,WAAU;;0CAC9C,6LAAC,iNAAA,CAAA,WAAQ;gCAAC,MAAM;gCAAI,WAAU;;;;;;4BAAS;;;;;;;;;;;;;;;;;;;AAMjD;KAhCM;uCAkCS","debugId":null}},
    {"offset": {"line": 509, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/screens/processing-screen.tsx"],"sourcesContent":["import React from 'react';\nimport { Loader2 } from 'lucide-react';\nimport AppLogo from '@/components/app-logo';\n\nconst ProcessingScreen: React.FC = () => {\n  const messages = [\n    \"Analyzing Prescription...\",\n    \"Extracting Medical Insights...\",\n    \"Decoding Handwritten Text...\",\n    \"Powered by Gemini AI.\"\n  ];\n  const [currentMessageIndex, setCurrentMessageIndex] = React.useState(0);\n\n  React.useEffect(() => {\n    const intervalId = setInterval(() => {\n      setCurrentMessageIndex((prevIndex) => (prevIndex + 1) % messages.length);\n    }, 2500);\n    return () => clearInterval(intervalId);\n  }, [messages.length]);\n\n  return (\n    <div className=\"flex flex-col items-center justify-center text-center p-6 rounded-lg shadow-xl bg-card min-h-[calc(100vh-10rem)] md:min-h-0 md:max-h-[80vh] md:aspect-[3/4] md:w-auto\">\n      <AppLogo className=\"mb-8\" iconSize={40} textSize=\"text-4xl\" />\n      <Loader2 className=\"h-16 w-16 animate-spin text-primary mb-6\" />\n      <p className=\"text-xl font-semibold text-foreground mb-2\">\n        {messages[currentMessageIndex]}\n      </p>\n      <p className=\"text-sm text-muted-foreground\">\n        This may take a few moments. Please wait.\n      </p>\n    </div>\n  );\n};\n\nexport default ProcessingScreen;\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;;;AAEA,MAAM,mBAA6B;;IACjC,MAAM,WAAW;QACf;QACA;QACA;QACA;KACD;IACD,MAAM,CAAC,qBAAqB,uBAAuB,GAAG,6JAAA,CAAA,UAAK,CAAC,QAAQ,CAAC;IAErE,6JAAA,CAAA,UAAK,CAAC,SAAS;sCAAC;YACd,MAAM,aAAa;yDAAY;oBAC7B;iEAAuB,CAAC,YAAc,CAAC,YAAY,CAAC,IAAI,SAAS,MAAM;;gBACzE;wDAAG;YACH;8CAAO,IAAM,cAAc;;QAC7B;qCAAG;QAAC,SAAS,MAAM;KAAC;IAEpB,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC,oIAAA,CAAA,UAAO;gBAAC,WAAU;gBAAO,UAAU;gBAAI,UAAS;;;;;;0BACjD,6LAAC,oNAAA,CAAA,UAAO;gBAAC,WAAU;;;;;;0BACnB,6LAAC;gBAAE,WAAU;0BACV,QAAQ,CAAC,oBAAoB;;;;;;0BAEhC,6LAAC;gBAAE,WAAU;0BAAgC;;;;;;;;;;;;AAKnD;GA5BM;KAAA;uCA8BS","debugId":null}},
    {"offset": {"line": 602, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/medicine-card.tsx"],"sourcesContent":["import React from 'react';\nimport type { MedicineDetails } from '@/types';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Pill, Droplets, Edit3, HelpCircle, Eye, Ear, Wind, Layers, Pipette, BotMessageSquare } from 'lucide-react';\n\ninterface MedicineCardProps {\n  medicine: MedicineDetails;\n  onEdit: (medicine: MedicineDetails) => void;\n}\n\nconst getMedicineIcon = (route?: string, name?: string) => {\n  const r = route?.toLowerCase() || '';\n  const n = name?.toLowerCase() || '';\n\n  if (r.includes('oral') || r.includes('tablet') || r.includes('capsule') || n.includes('tablet') || n.includes('pill') || n.includes('capsule')) return <Pill className=\"h-5 w-5 text-primary\" />;\n  if (r.includes('liquid') || r.includes('syrup') || r.includes('drops') || n.includes('syrup') || n.includes('solution') || n.includes('elixir')) {\n    if (r.includes('eye') || r.includes('ophthalmic')) return <Eye className=\"h-5 w-5 text-primary\" />;\n    if (r.includes('ear') || r.includes('otic')) return <Ear className=\"h-5 w-5 text-primary\" />;\n    return <Droplets className=\"h-5 w-5 text-primary\" />;\n  }\n  if (r.includes('topical') || r.includes('cream') || r.includes('ointment') || r.includes('gel') || n.includes('cream') || n.includes('ointment') || n.includes('gel')) return <Layers className=\"h-5 w-5 text-primary\" />;\n  if (r.includes('injection') || r.includes('injectable') || n.includes('injection')) return <Pipette className=\"h-5 w-5 text-primary\" />; // Closest to Syringe\n  if (r.includes('inhalation') || r.includes('inhaler') || n.includes('inhaler') || n.includes('spray')) return <Wind className=\"h-5 w-5 text-primary\" />;\n  if (r.includes('suppository')) return <BotMessageSquare className=\"h-5 w-5 text-primary\" />; // Abstract\n  \n  return <HelpCircle className=\"h-5 w-5 text-muted-foreground\" />; // Default icon\n};\n\n\nconst MedicineCard: React.FC<MedicineCardProps> = ({ medicine, onEdit }) => {\n  return (\n    <Card className=\"mb-4 shadow-md hover:shadow-lg transition-shadow duration-300 ease-in-out\">\n      <CardHeader className=\"pb-3\">\n        <div className=\"flex justify-between items-start\">\n          <div className=\"flex items-center gap-3\">\n            {getMedicineIcon(medicine.routeOfAdministration, medicine.medicineName)}\n            <CardTitle className=\"text-xl font-semibold text-primary\">\n              {medicine.medicineName || 'N/A'}\n            </CardTitle>\n          </div>\n          <Button variant=\"ghost\" size=\"icon\" onClick={() => onEdit(medicine)} aria-label={`Edit ${medicine.medicineName}`}>\n            <Edit3 className=\"h-5 w-5 text-muted-foreground hover:text-primary\" />\n          </Button>\n        </div>\n      </CardHeader>\n      <CardContent className=\"grid grid-cols-1 sm:grid-cols-2 gap-x-6 gap-y-3 text-sm\">\n        {medicine.dosage && (\n          <div>\n            <strong className=\"text-foreground\">Dosage:</strong>\n            <p className=\"text-muted-foreground\">{medicine.dosage}</p>\n          </div>\n        )}\n        {medicine.frequency && (\n          <div>\n            <strong className=\"text-foreground\">Frequency:</strong>\n            <p className=\"text-muted-foreground\">{medicine.frequency}</p>\n          </div>\n        )}\n        {medicine.duration && (\n          <div>\n            <strong className=\"text-foreground\">Duration:</strong>\n            <p className=\"text-muted-foreground\">{medicine.duration}</p>\n          </div>\n        )}\n        {medicine.routeOfAdministration && (\n          <div>\n            <strong className=\"text-foreground\">Route:</strong>\n            <p className=\"text-muted-foreground\">{medicine.routeOfAdministration}</p>\n          </div>\n        )}\n        {medicine.instructions && (\n          <div className=\"sm:col-span-2\">\n            <strong className=\"text-foreground\">Instructions:</strong>\n            <p className=\"text-muted-foreground whitespace-pre-wrap\">{medicine.instructions}</p>\n          </div>\n        )}\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default MedicineCard;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 896, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,SAAS,qKAAA,CAAA,OAAoB;AAEnC,MAAM,gBAAgB,qKAAA,CAAA,UAAuB;AAE7C,MAAM,eAAe,qKAAA,CAAA,SAAsB;AAE3C,MAAM,cAAc,qKAAA,CAAA,QAAqB;AAEzC,MAAM,8BAAgB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,EAGnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,UAAuB;QACtB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,0JACA;QAED,GAAG,KAAK;;;;;;KAVP;AAaN,cAAc,WAAW,GAAG,qKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,8BAAgB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGnC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,6LAAC;;0BACC,6LAAC;;;;;0BACD,6LAAC,qKAAA,CAAA,UAAuB;gBACtB,KAAK;gBACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,+fACA;gBAED,GAAG,KAAK;;oBAER;kCACD,6LAAC,qKAAA,CAAA,QAAqB;wBAAC,WAAU;;0CAC/B,6LAAC,+LAAA,CAAA,IAAC;gCAAC,WAAU;;;;;;0CACb,6LAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;;AAKlC,cAAc,WAAW,GAAG,qKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;MATP;AAYN,aAAa,WAAW,GAAG;AAE3B,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;MATP;AAYN,aAAa,WAAW,GAAG;AAE3B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qDACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,qKAAA,CAAA,QAAqB,CAAC,WAAW;AAE3D,MAAM,kCAAoB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGvC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,cAA2B;QAC1B,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,kBAAkB,WAAW,GAAG,qKAAA,CAAA,cAA2B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 1047, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,6LAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kYACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 1083, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;;AAGb,MAAM,WAAW,GAAG,oKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 1122, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport {cn} from '@/lib/utils';\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, React.ComponentProps<'textarea'>>(\n  ({className, ...props}, ref) => {\n    return (\n      <textarea\n        className={cn(\n          'flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm',\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nTextarea.displayName = 'Textarea';\n\nexport {Textarea};\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC9B,CAAC,EAAC,SAAS,EAAE,GAAG,OAAM,EAAE;IACtB,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qTACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 1157, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/edit-medicine-dialog.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport type { MedicineDetails } from '@/types';\nimport { Button } from '@/components/ui/button';\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n} from '@/components/ui/dialog';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Textarea } from '@/components/ui/textarea'; // Assuming Textarea is available or created\n\ninterface EditMedicineDialogProps {\n  isOpen: boolean;\n  onOpenChange: (open: boolean) => void;\n  medicine: MedicineDetails | null;\n  onSave: (updatedMedicine: MedicineDetails) => void;\n}\n\nconst EditMedicineDialog: React.FC<EditMedicineDialogProps> = ({ isOpen, onOpenChange, medicine, onSave }) => {\n  const [formData, setFormData] = useState<Partial<MedicineDetails>>({});\n\n  useEffect(() => {\n    if (medicine) {\n      setFormData(medicine);\n    }\n  }, [medicine]);\n\n  if (!medicine) return null;\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({ ...prev, [name]: value }));\n  };\n\n  const handleSave = () => {\n    onSave({ ...medicine, ...formData } as MedicineDetails);\n    onOpenChange(false);\n  };\n\n  return (\n    <Dialog open={isOpen} onOpenChange={onOpenChange}>\n      <DialogContent className=\"sm:max-w-[480px] bg-card\">\n        <DialogHeader>\n          <DialogTitle className=\"text-primary\">Edit Medicine: {medicine.medicineName}</DialogTitle>\n          <DialogDescription>\n            Make changes to the extracted medicine details below.\n          </DialogDescription>\n        </DialogHeader>\n        <div className=\"grid gap-4 py-4 max-h-[60vh] overflow-y-auto pr-2\">\n          {[\n            { id: 'medicineName', label: 'Medicine Name', type: 'text' },\n            { id: 'dosage', label: 'Dosage', type: 'text' },\n            { id: 'frequency', label: 'Frequency', type: 'text' },\n            { id: 'duration', label: 'Duration', type: 'text' },\n            { id: 'routeOfAdministration', label: 'Route of Administration', type: 'text' },\n            { id: 'instructions', label: 'Instructions', type: 'textarea' },\n          ].map(field => (\n            <div className=\"grid grid-cols-4 items-center gap-4\" key={field.id}>\n              <Label htmlFor={field.id} className=\"text-right col-span-1 text-foreground\">\n                {field.label}\n              </Label>\n              {field.type === 'textarea' ? (\n                 <Textarea\n                    id={field.id}\n                    name={field.id}\n                    value={formData[field.id as keyof MedicineDetails] as string || ''}\n                    onChange={handleChange}\n                    className=\"col-span-3\"\n                    rows={3}\n                  />\n              ) : (\n                <Input\n                  id={field.id}\n                  name={field.id}\n                  value={formData[field.id as keyof MedicineDetails] as string || ''}\n                  onChange={handleChange}\n                  className=\"col-span-3\"\n                />\n              )}\n            </div>\n          ))}\n        </div>\n        <DialogFooter>\n          <Button type=\"button\" variant=\"outline\" onClick={() => onOpenChange(false)}>Cancel</Button>\n          <Button type=\"button\" onClick={handleSave} className=\"bg-accent hover:bg-accent/90 text-accent-foreground\">Save Changes</Button>\n        </DialogFooter>\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nexport default EditMedicineDialog;\n"],"names":[],"mappings":";;;;AAAA;AAEA;AACA;AAQA;AACA;AACA,6OAAqD,4CAA4C;;;;;;;;;AASjG,MAAM,qBAAwD,CAAC,EAAE,MAAM,EAAE,YAAY,EAAE,QAAQ,EAAE,MAAM,EAAE;;IACvG,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAA4B,CAAC;IAEpE,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;wCAAE;YACR,IAAI,UAAU;gBACZ,YAAY;YACd;QACF;uCAAG;QAAC;KAAS;IAEb,IAAI,CAAC,UAAU,OAAO;IAEtB,MAAM,eAAe,CAAC;QACpB,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM;QAChC,YAAY,CAAA,OAAQ,CAAC;gBAAE,GAAG,IAAI;gBAAE,CAAC,KAAK,EAAE;YAAM,CAAC;IACjD;IAEA,MAAM,aAAa;QACjB,OAAO;YAAE,GAAG,QAAQ;YAAE,GAAG,QAAQ;QAAC;QAClC,aAAa;IACf;IAEA,qBACE,6LAAC,qIAAA,CAAA,SAAM;QAAC,MAAM;QAAQ,cAAc;kBAClC,cAAA,6LAAC,qIAAA,CAAA,gBAAa;YAAC,WAAU;;8BACvB,6LAAC,qIAAA,CAAA,eAAY;;sCACX,6LAAC,qIAAA,CAAA,cAAW;4BAAC,WAAU;;gCAAe;gCAAgB,SAAS,YAAY;;;;;;;sCAC3E,6LAAC,qIAAA,CAAA,oBAAiB;sCAAC;;;;;;;;;;;;8BAIrB,6LAAC;oBAAI,WAAU;8BACZ;wBACC;4BAAE,IAAI;4BAAgB,OAAO;4BAAiB,MAAM;wBAAO;wBAC3D;4BAAE,IAAI;4BAAU,OAAO;4BAAU,MAAM;wBAAO;wBAC9C;4BAAE,IAAI;4BAAa,OAAO;4BAAa,MAAM;wBAAO;wBACpD;4BAAE,IAAI;4BAAY,OAAO;4BAAY,MAAM;wBAAO;wBAClD;4BAAE,IAAI;4BAAyB,OAAO;4BAA2B,MAAM;wBAAO;wBAC9E;4BAAE,IAAI;4BAAgB,OAAO;4BAAgB,MAAM;wBAAW;qBAC/D,CAAC,GAAG,CAAC,CAAA,sBACJ,6LAAC;4BAAI,WAAU;;8CACb,6LAAC,oIAAA,CAAA,QAAK;oCAAC,SAAS,MAAM,EAAE;oCAAE,WAAU;8CACjC,MAAM,KAAK;;;;;;gCAEb,MAAM,IAAI,KAAK,2BACb,6LAAC,uIAAA,CAAA,WAAQ;oCACN,IAAI,MAAM,EAAE;oCACZ,MAAM,MAAM,EAAE;oCACd,OAAO,QAAQ,CAAC,MAAM,EAAE,CAA0B,IAAc;oCAChE,UAAU;oCACV,WAAU;oCACV,MAAM;;;;;yDAGV,6LAAC,oIAAA,CAAA,QAAK;oCACJ,IAAI,MAAM,EAAE;oCACZ,MAAM,MAAM,EAAE;oCACd,OAAO,QAAQ,CAAC,MAAM,EAAE,CAA0B,IAAc;oCAChE,UAAU;oCACV,WAAU;;;;;;;2BAnB0C,MAAM,EAAE;;;;;;;;;;8BAyBtE,6LAAC,qIAAA,CAAA,eAAY;;sCACX,6LAAC,qIAAA,CAAA,SAAM;4BAAC,MAAK;4BAAS,SAAQ;4BAAU,SAAS,IAAM,aAAa;sCAAQ;;;;;;sCAC5E,6LAAC,qIAAA,CAAA,SAAM;4BAAC,MAAK;4BAAS,SAAS;4BAAY,WAAU;sCAAsD;;;;;;;;;;;;;;;;;;;;;;;AAKrH;GAvEM;KAAA;uCAyES","debugId":null}},
    {"offset": {"line": 1366, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/scroll-area.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAGhC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,6LAAC,6KAAA,CAAA,OAAwB;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,4BAA4B;QACzC,GAAG,KAAK;;0BAET,6LAAC,6KAAA,CAAA,WAA4B;gBAAC,WAAU;0BACrC;;;;;;0BAEH,6LAAC;;;;;0BACD,6LAAC,6KAAA,CAAA,SAA0B;;;;;;;;;;;;AAG/B,WAAW,WAAW,GAAG,6KAAA,CAAA,OAAwB,CAAC,WAAW;AAE7D,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,cAAc,UAAU,EAAE,GAAG,OAAO,EAAE,oBACpD,6LAAC,6KAAA,CAAA,sBAAuC;QACtC,KAAK;QACL,aAAa;QACb,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,iDACA,gBAAgB,cACd,sDACF,gBAAgB,gBACd,wDACF;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,6KAAA,CAAA,kBAAmC;YAAC,WAAU;;;;;;;;;;;MAjB7C;AAoBN,UAAU,WAAW,GAAG,6KAAA,CAAA,sBAAuC,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 1443, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/separator.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n"],"names":[],"mappings":";;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAI/B,CACE,EAAE,SAAS,EAAE,cAAc,YAAY,EAAE,aAAa,IAAI,EAAE,GAAG,OAAO,EACtE,oBAEA,6LAAC,wKAAA,CAAA,OAAuB;QACtB,KAAK;QACL,YAAY;QACZ,aAAa;QACb,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sBACA,gBAAgB,eAAe,mBAAmB,kBAClD;QAED,GAAG,KAAK;;;;;;;AAIf,UAAU,WAAW,GAAG,wKAAA,CAAA,OAAuB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 1481, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/screens/results-screen.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport Image from 'next/image';\nimport type { PrescriptionData, MedicineDetails } from '@/types';\nimport MedicineCard from '@/components/medicine-card';\nimport EditMedicineDialog from '@/components/edit-medicine-dialog';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardHeader, CardTitle, CardFooter } from '@/components/ui/card';\nimport { ScrollArea } from '@/components/ui/scroll-area';\nimport { Separator } from '@/components/ui/separator';\nimport { AlertCircle, CheckCircle, Copy, Share2, FileScan, Maximize } from 'lucide-react';\nimport { useToast } from \"@/hooks/use-toast\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n} from '@/components/ui/dialog';\n\ninterface ResultsScreenProps {\n  prescriptionData: PrescriptionData;\n  originalImage: string;\n  onScanAnother: () => void;\n  onUpdatePrescriptionData: (updatedData: PrescriptionData) => void;\n}\n\nconst ResultsScreen: React.FC<ResultsScreenProps> = ({ prescriptionData, originalImage, onScanAnother, onUpdatePrescriptionData }) => {\n  const [editingMedicine, setEditingMedicine] = useState<MedicineDetails | null>(null);\n  const [isEditDialogOpen, setIsEditDialogOpen] = useState(false);\n  const { toast } = useToast();\n\n  const handleEditMedicine = (medicine: MedicineDetails) => {\n    setEditingMedicine(medicine);\n    setIsEditDialogOpen(true);\n  };\n\n  const handleSaveMedicine = (updatedMedicine: MedicineDetails) => {\n    const updatedMedicines = prescriptionData.medicines.map(med =>\n      med.id === updatedMedicine.id ? updatedMedicine : med\n    );\n    onUpdatePrescriptionData({ ...prescriptionData, medicines: updatedMedicines });\n    toast({ title: \"Success\", description: `${updatedMedicine.medicineName} updated.` });\n  };\n\n  const formatPrescriptionText = () => {\n    let text = `Prescription Insights:\\n\\n`;\n    text += `Medicines:\\n`;\n    prescriptionData.medicines.forEach((med, index) => {\n      text += `${index + 1}. ${med.medicineName || 'N/A'}\\n`;\n      if (med.dosage) text += `   - Dosage: ${med.dosage}\\n`;\n      if (med.frequency) text += `   - Frequency: ${med.frequency}\\n`;\n      if (med.duration) text += `   - Duration: ${med.duration}\\n`;\n      if (med.routeOfAdministration) text += `   - Route: ${med.routeOfAdministration}\\n`;\n      if (med.instructions) text += `   - Instructions: ${med.instructions}\\n`;\n      text += '\\n';\n    });\n\n    if (prescriptionData.doctorName || prescriptionData.clinicInformation || prescriptionData.dateOfPrescription || prescriptionData.patientName) {\n      text += `Other Information:\\n`;\n      if (prescriptionData.doctorName) text += ` - Doctor: ${prescriptionData.doctorName}\\n`;\n      if (prescriptionData.clinicInformation) text += ` - Clinic: ${prescriptionData.clinicInformation}\\n`;\n      if (prescriptionData.dateOfPrescription) text += ` - Date: ${prescriptionData.dateOfPrescription}\\n`;\n      if (prescriptionData.patientName) text += ` - Patient: ${prescriptionData.patientName}\\n`; // Consider privacy implications\n    }\n    return text;\n  };\n\n  const handleCopyToClipboard = async () => {\n    try {\n      await navigator.clipboard.writeText(formatPrescriptionText());\n      toast({ title: \"Copied to clipboard!\", icon: <CheckCircle className=\"h-5 w-5 text-green-500\" /> });\n    } catch (err) {\n      toast({ title: \"Failed to copy\", description: \"Could not copy text to clipboard.\", variant: \"destructive\" });\n    }\n  };\n  \n  const handleShare = async () => {\n    const shareData = {\n      title: 'Prescription Insights',\n      text: formatPrescriptionText(),\n    };\n    try {\n      if (navigator.share) {\n        await navigator.share(shareData);\n      } else {\n        // Fallback for browsers that don't support navigator.share\n        handleCopyToClipboard();\n        toast({ title: \"Share not supported\", description: \"Content copied to clipboard instead.\" });\n      }\n    } catch (err) {\n      console.error('Share failed:', err);\n      // If share fails (e.g. user cancels), copy to clipboard as a fallback\n      handleCopyToClipboard();\n      toast({ title: \"Share cancelled or failed\", description: \"Content copied to clipboard instead.\", variant: \"destructive\" });\n    }\n  };\n\n\n  return (\n    <div className=\"w-full space-y-6\">\n      <Card className=\"shadow-xl overflow-hidden\">\n        <CardHeader className=\"bg-primary/10\">\n          <div className=\"flex justify-between items-center\">\n            <CardTitle className=\"text-2xl text-primary\">Prescription Insights</CardTitle>\n            <Dialog>\n              <DialogTrigger asChild>\n                <Button variant=\"ghost\" size=\"icon\" aria-label=\"View original prescription image\">\n                  <Maximize className=\"h-5 w-5 text-primary\" />\n                </Button>\n              </DialogTrigger>\n              <DialogContent className=\"max-w-3xl max-h-[90vh]\">\n                <DialogHeader>\n                  <DialogTitle>Original Prescription Image</DialogTitle>\n                </DialogHeader>\n                <div className=\"relative w-full aspect-[3/4] max-h-[75vh] overflow-hidden rounded-md\">\n                    <Image src={originalImage} alt=\"Original Prescription\" fill style={{ objectFit: 'contain' }} data-ai-hint=\"medical prescription\" />\n                </div>\n              </DialogContent>\n            </Dialog>\n          </div>\n        </CardHeader>\n        <CardContent className=\"p-0\">\n          <ScrollArea className=\"h-[calc(100vh-26rem)] md:h-[calc(80vh-16rem)] lg:h-[500px]\"> {/* Adjust height as needed */}\n            <div className=\"p-6\">\n              {prescriptionData.medicines.length > 0 ? (\n                prescriptionData.medicines.map(medicine => (\n                  <MedicineCard key={medicine.id} medicine={medicine} onEdit={handleEditMedicine} />\n                ))\n              ) : (\n                <div className=\"text-center py-8\">\n                  <AlertCircle className=\"mx-auto h-12 w-12 text-muted-foreground mb-2\" />\n                  <p className=\"text-muted-foreground\">No medicines found in the prescription.</p>\n                </div>\n              )}\n\n              {(prescriptionData.doctorName || prescriptionData.clinicInformation || prescriptionData.dateOfPrescription || prescriptionData.patientName) && (\n                <>\n                  <Separator className=\"my-6\" />\n                  <h3 className=\"text-lg font-semibold text-foreground mb-3\">Other Information</h3>\n                  <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-x-6 gap-y-2 text-sm\">\n                    {prescriptionData.doctorName && (<div><strong>Doctor:</strong> <span className=\"text-muted-foreground\">{prescriptionData.doctorName}</span></div>)}\n                    {prescriptionData.clinicInformation && (<div><strong>Clinic:</strong> <span className=\"text-muted-foreground\">{prescriptionData.clinicInformation}</span></div>)}\n                    {prescriptionData.dateOfPrescription && (<div><strong>Date:</strong> <span className=\"text-muted-foreground\">{prescriptionData.dateOfPrescription}</span></div>)}\n                    {prescriptionData.patientName && (<div><strong>Patient:</strong> <span className=\"text-muted-foreground\">{prescriptionData.patientName}</span></div>)}\n                  </div>\n                </>\n              )}\n            </div>\n          </ScrollArea>\n        </CardContent>\n        <CardFooter className=\"flex flex-col sm:flex-row justify-end gap-3 p-4 border-t bg-primary/5\">\n          <Button variant=\"outline\" onClick={handleCopyToClipboard}>\n            <Copy size={18} className=\"mr-2\" /> Copy All\n          </Button>\n          <Button variant=\"outline\" onClick={handleShare}>\n            <Share2 size={18} className=\"mr-2\" /> Share\n          </Button>\n          <Button onClick={onScanAnother} className=\"bg-accent hover:bg-accent/90 text-accent-foreground\">\n            <FileScan size={18} className=\"mr-2\" /> Scan Another\n          </Button>\n        </CardFooter>\n      </Card>\n\n      {editingMedicine && (\n        <EditMedicineDialog\n          isOpen={isEditDialogOpen}\n          onOpenChange={setIsEditDialogOpen}\n          medicine={editingMedicine}\n          onSave={handleSaveMedicine}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default ResultsScreen;\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1994, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/screens/error-screen.tsx"],"sourcesContent":["import React from 'react';\nimport { Button } from '@/components/ui/button';\nimport { AlertTriangle, Info, RotateCcw, ScanSearch } from 'lucide-react';\nimport { Card, CardContent, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';\n\ninterface ErrorScreenProps {\n  errorMessage: string;\n  onTryAgainWithNewImage: () => void;\n  onTryAnalyzingAgain?: () => void; // Optional: if original image can be re-analyzed\n}\n\nconst ErrorScreen: React.FC<ErrorScreenProps> = ({ errorMessage, onTryAgainWithNewImage, onTryAnalyzingAgain }) => {\n  return (\n    <Card className=\"w-full shadow-xl border-destructive\">\n      <CardHeader className=\"bg-destructive/10\">\n        <CardTitle className=\"flex items-center text-destructive text-2xl\">\n          <AlertTriangle size={28} className=\"mr-3\" />\n          Analysis Failed\n        </CardTitle>\n      </CardHeader>\n      <CardContent className=\"space-y-6 pt-6\">\n        <p className=\"text-destructive-foreground text-center text-base\">\n          {errorMessage}\n        </p>\n        \n        <div className=\"p-4 bg-muted/50 rounded-lg border border-dashed border-input\">\n          <h4 className=\"text-sm font-semibold text-foreground mb-2 flex items-center\">\n            <Info size={16} className=\"mr-2 text-primary\" />\n            Tips for a Better Scan:\n          </h4>\n          <ul className=\"list-disc list-inside text-xs text-muted-foreground space-y-1\">\n            <li>Ensure good, even lighting. Avoid shadows and glare.</li>\n            <li>Place the prescription on a flat, contrasting surface.</li>\n            <li>Make sure the text is clear and in focus.</li>\n            <li>Hold your phone steady while taking the picture.</li>\n            <li>Capture the entire prescription, avoiding cutoff edges.</li>\n          </ul>\n        </div>\n      </CardContent>\n      <CardFooter className=\"flex flex-col sm:flex-row justify-center gap-4 p-6\">\n        <Button onClick={onTryAgainWithNewImage} variant=\"outline\" size=\"lg\" className=\"w-full sm:w-auto\">\n          <RotateCcw size={20} className=\"mr-2\" />\n          Try with New Image\n        </Button>\n        {onTryAnalyzingAgain && (\n          <Button onClick={onTryAnalyzingAgain} size=\"lg\" className=\"w-full sm:w-auto bg-accent hover:bg-accent/90 text-accent-foreground\">\n            <ScanSearch size={20} className=\"mr-2\" />\n            Try Analyzing Current Image Again\n          </Button>\n        )}\n      </CardFooter>\n    </Card>\n  );\n};\n\nexport default ErrorScreen;\n"],"names":[],"mappings":";;;;AACA;AACA;AAAA;AAAA;AAAA;AACA;;;;;AAQA,MAAM,cAA0C,CAAC,EAAE,YAAY,EAAE,sBAAsB,EAAE,mBAAmB,EAAE;IAC5G,qBACE,6LAAC,mIAAA,CAAA,OAAI;QAAC,WAAU;;0BACd,6LAAC,mIAAA,CAAA,aAAU;gBAAC,WAAU;0BACpB,cAAA,6LAAC,mIAAA,CAAA,YAAS;oBAAC,WAAU;;sCACnB,6LAAC,2NAAA,CAAA,gBAAa;4BAAC,MAAM;4BAAI,WAAU;;;;;;wBAAS;;;;;;;;;;;;0BAIhD,6LAAC,mIAAA,CAAA,cAAW;gBAAC,WAAU;;kCACrB,6LAAC;wBAAE,WAAU;kCACV;;;;;;kCAGH,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAG,WAAU;;kDACZ,6LAAC,qMAAA,CAAA,OAAI;wCAAC,MAAM;wCAAI,WAAU;;;;;;oCAAsB;;;;;;;0CAGlD,6LAAC;gCAAG,WAAU;;kDACZ,6LAAC;kDAAG;;;;;;kDACJ,6LAAC;kDAAG;;;;;;kDACJ,6LAAC;kDAAG;;;;;;kDACJ,6LAAC;kDAAG;;;;;;kDACJ,6LAAC;kDAAG;;;;;;;;;;;;;;;;;;;;;;;;0BAIV,6LAAC,mIAAA,CAAA,aAAU;gBAAC,WAAU;;kCACpB,6LAAC,qIAAA,CAAA,SAAM;wBAAC,SAAS;wBAAwB,SAAQ;wBAAU,MAAK;wBAAK,WAAU;;0CAC7E,6LAAC,mNAAA,CAAA,YAAS;gCAAC,MAAM;gCAAI,WAAU;;;;;;4BAAS;;;;;;;oBAGzC,qCACC,6LAAC,qIAAA,CAAA,SAAM;wBAAC,SAAS;wBAAqB,MAAK;wBAAK,WAAU;;0CACxD,6LAAC,qNAAA,CAAA,aAAU;gCAAC,MAAM;gCAAI,WAAU;;;;;;4BAAS;;;;;;;;;;;;;;;;;;;AAOrD;KA1CM;uCA4CS","debugId":null}},
    {"offset": {"line": 2195, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/alert.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n"],"names":[],"mappings":";;;;;;AAAA;AACA;AAEA;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,6JACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG3B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAO,EAAE,oBACnC,6LAAC;QACC,KAAK;QACL,MAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;;AAGb,MAAM,WAAW,GAAG;AAEpB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,gDAAgD;QAC7D,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,iCAAmB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,iBAAiB,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 2272, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/screens/camera-capture-screen.tsx"],"sourcesContent":["import React from 'react';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Alert, AlertDescription, AlertTitle } from '@/components/ui/alert';\nimport { Camera, Ban, Loader2, XCircle } from 'lucide-react';\nimport type { useToast } from \"@/hooks/use-toast\";\n\n\ninterface CameraCaptureScreenProps {\n  videoRef: React.RefObject<HTMLVideoElement>;\n  canvasRef: React.RefObject<HTMLCanvasElement>; // For capturing, though hidden\n  onCapturePhoto: () => void;\n  onCloseCamera: () => void;\n  hasCameraPermission: boolean | null;\n  isInitializing: boolean;\n  toast: ReturnType<typeof useToast>['toast']; // Pass toast for direct use if needed\n}\n\nconst CameraCaptureScreen: React.FC<CameraCaptureScreenProps> = ({\n  videoRef,\n  // canvasRef is passed but not directly used in JSX here as it's hidden\n  onCapturePhoto,\n  onCloseCamera,\n  hasCameraPermission,\n  isInitializing,\n  toast,\n}) => {\n  return (\n    <Card className=\"w-full shadow-xl\">\n      <CardHeader>\n        <CardTitle className=\"text-2xl text-center text-primary\">Capture Prescription</CardTitle>\n      </CardHeader>\n      <CardContent className=\"flex flex-col items-center space-y-4\">\n        <div className=\"w-full max-w-md aspect-video bg-muted rounded-lg overflow-hidden relative border-2 border-primary shadow-inner\">\n          <video\n            ref={videoRef}\n            className=\"w-full h-full object-cover\"\n            autoPlay\n            playsInline\n            muted\n          />\n          {isInitializing && (\n            <div className=\"absolute inset-0 flex flex-col items-center justify-center bg-black/50 text-background\">\n              <Loader2 className=\"h-12 w-12 animate-spin mb-4\" />\n              <p>Initializing Camera...</p>\n            </div>\n          )}\n          {hasCameraPermission === false && !isInitializing && (\n             <div className=\"absolute inset-0 flex flex-col items-center justify-center bg-destructive/80 text-destructive-foreground p-4\">\n              <Ban size={48} className=\"mb-4\" />\n              <h3 className=\"text-xl font-semibold mb-2\">Camera Access Denied</h3>\n              <p className=\"text-center text-sm\">\n                ScriptAssist needs camera access to capture prescriptions. \n                Please enable camera permissions in your browser settings and try again.\n              </p>\n            </div>\n          )}\n        </div>\n\n        {hasCameraPermission === null && !isInitializing && (\n           <Alert variant=\"default\" className=\"w-full max-w-md\">\n            <AlertTitle>Camera Permission</AlertTitle>\n            <AlertDescription>\n              Requesting camera access. Please allow permission when prompted.\n            </AlertDescription>\n          </Alert>\n        )}\n      </CardContent>\n      <CardFooter className=\"flex flex-col sm:flex-row justify-center gap-4 p-6\">\n        <Button\n          onClick={onCloseCamera}\n          variant=\"outline\"\n          size=\"lg\"\n          className=\"w-full sm:w-auto\"\n        >\n          <XCircle size={20} className=\"mr-2\" />\n          Cancel\n        </Button>\n        <Button\n          onClick={onCapturePhoto}\n          size=\"lg\"\n          className=\"w-full sm:w-auto bg-accent hover:bg-accent/90 text-accent-foreground\"\n          disabled={hasCameraPermission !== true || isInitializing}\n        >\n          <Camera size={20} className=\"mr-2\" />\n          Capture Photo\n        </Button>\n      </CardFooter>\n    </Card>\n  );\n};\n\nexport default CameraCaptureScreen;\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;;;;;;AAcA,MAAM,sBAA0D,CAAC,EAC/D,QAAQ,EACR,uEAAuE;AACvE,cAAc,EACd,aAAa,EACb,mBAAmB,EACnB,cAAc,EACd,KAAK,EACN;IACC,qBACE,6LAAC,mIAAA,CAAA,OAAI;QAAC,WAAU;;0BACd,6LAAC,mIAAA,CAAA,aAAU;0BACT,cAAA,6LAAC,mIAAA,CAAA,YAAS;oBAAC,WAAU;8BAAoC;;;;;;;;;;;0BAE3D,6LAAC,mIAAA,CAAA,cAAW;gBAAC,WAAU;;kCACrB,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCACC,KAAK;gCACL,WAAU;gCACV,QAAQ;gCACR,WAAW;gCACX,KAAK;;;;;;4BAEN,gCACC,6LAAC;gCAAI,WAAU;;kDACb,6LAAC,oNAAA,CAAA,UAAO;wCAAC,WAAU;;;;;;kDACnB,6LAAC;kDAAE;;;;;;;;;;;;4BAGN,wBAAwB,SAAS,CAAC,gCAChC,6LAAC;gCAAI,WAAU;;kDACd,6LAAC,mMAAA,CAAA,MAAG;wCAAC,MAAM;wCAAI,WAAU;;;;;;kDACzB,6LAAC;wCAAG,WAAU;kDAA6B;;;;;;kDAC3C,6LAAC;wCAAE,WAAU;kDAAsB;;;;;;;;;;;;;;;;;;oBAQxC,wBAAwB,QAAQ,CAAC,gCAC/B,6LAAC,oIAAA,CAAA,QAAK;wBAAC,SAAQ;wBAAU,WAAU;;0CAClC,6LAAC,oIAAA,CAAA,aAAU;0CAAC;;;;;;0CACZ,6LAAC,oIAAA,CAAA,mBAAgB;0CAAC;;;;;;;;;;;;;;;;;;0BAMxB,6LAAC,mIAAA,CAAA,aAAU;gBAAC,WAAU;;kCACpB,6LAAC,qIAAA,CAAA,SAAM;wBACL,SAAS;wBACT,SAAQ;wBACR,MAAK;wBACL,WAAU;;0CAEV,6LAAC,+MAAA,CAAA,UAAO;gCAAC,MAAM;gCAAI,WAAU;;;;;;4BAAS;;;;;;;kCAGxC,6LAAC,qIAAA,CAAA,SAAM;wBACL,SAAS;wBACT,MAAK;wBACL,WAAU;wBACV,UAAU,wBAAwB,QAAQ;;0CAE1C,6LAAC,yMAAA,CAAA,SAAM;gCAAC,MAAM;gCAAI,WAAU;;;;;;4BAAS;;;;;;;;;;;;;;;;;;;AAM/C;KAxEM;uCA0ES","debugId":null}},
    {"offset": {"line": 2487, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/page.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useRef, useCallback, useEffect } from 'react';\nimport type { ScreenView, PrescriptionData } from '@/types';\nimport { extractPrescriptionDetails, ExtractPrescriptionDetailsInput } from '@/ai/flows/extract-prescription-details';\n\nimport UploadScreen from '@/components/screens/upload-screen';\nimport ImagePreviewScreen from '@/components/screens/image-preview-screen';\nimport ProcessingScreen from '@/components/screens/processing-screen';\nimport ResultsScreen from '@/components/screens/results-screen';\nimport ErrorScreen from '@/components/screens/error-screen';\nimport CameraCaptureScreen from '@/components/screens/camera-capture-screen'; // New import\nimport { useToast } from \"@/hooks/use-toast\";\nimport { v4 as uuidv4 } from 'uuid';\n\nexport default function HomePage() {\n  const [currentScreen, setCurrentScreen] = useState<ScreenView>('upload');\n  const [imageDataUri, setImageDataUri] = useState<string | null>(null);\n  const [prescriptionData, setPrescriptionData] = useState<PrescriptionData | null>(null);\n  const [error, setError] = useState<string | null>(null);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const { toast } = useToast();\n\n  const fileInputRef = useRef<HTMLInputElement>(null);\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  const [hasCameraPermission, setHasCameraPermission] = useState<boolean | null>(null);\n  const [isCameraInitializing, setIsCameraInitializing] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (currentScreen === 'cameraCapture') {\n      const getCameraPermission = async () => {\n        setIsCameraInitializing(true);\n        setHasCameraPermission(null);\n        if (!navigator.mediaDevices || !navigator.mediaDevices.getUserMedia) {\n          toast({\n            variant: 'destructive',\n            title: 'Camera Not Supported',\n            description: 'Your browser does not support camera access or is not available in the current context (e.g. HTTP).',\n          });\n          setHasCameraPermission(false);\n          setIsCameraInitializing(false);\n          setCurrentScreen('upload');\n          return;\n        }\n        try {\n          const stream = await navigator.mediaDevices.getUserMedia({ video: { facingMode: \"environment\" } });\n          if (videoRef.current) {\n            videoRef.current.srcObject = stream;\n          }\n          setHasCameraPermission(true);\n        } catch (err) {\n          console.error('Error accessing camera:', err);\n          setHasCameraPermission(false);\n          toast({\n            variant: 'destructive',\n            title: 'Camera Access Denied',\n            description: 'Please enable camera permissions in your browser settings.',\n          });\n        } finally {\n          setIsCameraInitializing(false);\n        }\n      };\n      getCameraPermission();\n\n      return () => {\n        if (videoRef.current && videoRef.current.srcObject) {\n          const stream = videoRef.current.srcObject as MediaStream;\n          stream.getTracks().forEach(track => track.stop());\n          videoRef.current.srcObject = null;\n        }\n      };\n    }\n  }, [currentScreen, toast]);\n\n  const resetToUpload = useCallback(() => {\n    setImageDataUri(null);\n    setPrescriptionData(null);\n    setError(null);\n    setCurrentScreen('upload');\n    if (fileInputRef.current) {\n      fileInputRef.current.value = '';\n    }\n    if (videoRef.current && videoRef.current.srcObject) {\n        const stream = videoRef.current.srcObject as MediaStream;\n        stream.getTracks().forEach(track => track.stop());\n        videoRef.current.srcObject = null;\n    }\n    setHasCameraPermission(null);\n  }, []);\n\n  const handleFileChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0];\n    if (file) {\n      if (file.size > 4 * 1024 * 1024) {\n        toast({\n          title: \"File too large\",\n          description: \"Please select an image smaller than 4MB.\",\n          variant: \"destructive\",\n        });\n        return;\n      }\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setImageDataUri(reader.result as string);\n        setCurrentScreen('preview');\n        setError(null);\n      };\n      reader.onerror = () => {\n        setError(\"Failed to read the image file.\");\n        setCurrentScreen('error');\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n\n  const handleAnalyze = async () => {\n    if (!imageDataUri) {\n      setError(\"No image data to analyze.\");\n      setCurrentScreen('error');\n      return;\n    }\n\n    setCurrentScreen('processing');\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const input: ExtractPrescriptionDetailsInput = { prescriptionImage: imageDataUri };\n      const result = await extractPrescriptionDetails(input);\n      \n      const processedMedicines = result.medicines.map(med => ({\n        ...med,\n        id: uuidv4(),\n      }));\n\n      setPrescriptionData({ ...result, medicines: processedMedicines });\n      setCurrentScreen('results');\n    } catch (e: any) {\n      console.error(\"Analysis failed:\", e);\n      setError(e.message || \"An unknown error occurred during analysis. The image might be too blurry, unclear, or the content unrecognizable.\");\n      setCurrentScreen('error');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  \n  const handlePrescriptionUpdate = (updatedData: PrescriptionData) => {\n    setPrescriptionData(updatedData);\n  };\n\n  const handleOpenCamera = () => {\n    setCurrentScreen('cameraCapture');\n  };\n\n  const handleCapturePhoto = () => {\n    if (videoRef.current && canvasRef.current && hasCameraPermission) {\n      const video = videoRef.current;\n      const canvas = canvasRef.current;\n\n      const stream = video.srcObject as MediaStream;\n      if (!stream) {\n        setError(\"Camera stream not available.\");\n        setCurrentScreen('error');\n        return;\n      }\n      const track = stream.getVideoTracks()[0];\n      const settings = track.getSettings();\n      \n      canvas.width = settings.width || video.videoWidth;\n      canvas.height = settings.height || video.videoHeight;\n      \n      const context = canvas.getContext('2d');\n      if (context) {\n        // Flip image horizontally if front camera was used (optional, depends on desired UX)\n        // if (settings.facingMode === 'user') {\n        //   context.translate(canvas.width, 0);\n        //   context.scale(-1, 1);\n        // }\n        context.drawImage(video, 0, 0, canvas.width, canvas.height);\n        const dataUri = canvas.toDataURL('image/jpeg');\n\n        if (videoRef.current && videoRef.current.srcObject) {\n            const stream = videoRef.current.srcObject as MediaStream;\n            stream.getTracks().forEach(track => track.stop());\n            videoRef.current.srcObject = null;\n        }\n        \n        setImageDataUri(dataUri);\n        setCurrentScreen('preview');\n        setError(null);\n        setHasCameraPermission(null); // Reset permission state\n      } else {\n        setError(\"Failed to capture image from camera context.\");\n        setCurrentScreen('error');\n      }\n    } else {\n      setError(\"Camera not ready or permission denied.\");\n      setCurrentScreen('error');\n    }\n  };\n\n  const handleCloseCamera = () => {\n    if (videoRef.current && videoRef.current.srcObject) {\n        const stream = videoRef.current.srcObject as MediaStream;\n        stream.getTracks().forEach(track => track.stop());\n        videoRef.current.srcObject = null;\n    }\n    setCurrentScreen('upload');\n    setHasCameraPermission(null);\n  };\n\n  const renderScreen = () => {\n    switch (currentScreen) {\n      case 'upload':\n        return (\n          <UploadScreen\n            onFileUpload={(event) => handleFileChange(event)}\n            fileInputRef={fileInputRef}\n            onOpenCamera={handleOpenCamera}\n          />\n        );\n      case 'preview':\n        return (\n          <ImagePreviewScreen\n            imageDataUri={imageDataUri!}\n            onAnalyze={handleAnalyze}\n            onRetake={resetToUpload}\n          />\n        );\n      case 'processing':\n        return <ProcessingScreen />;\n      case 'results':\n        return (\n          <ResultsScreen\n            prescriptionData={prescriptionData!}\n            originalImage={imageDataUri!}\n            onScanAnother={resetToUpload}\n            onUpdatePrescriptionData={handlePrescriptionUpdate}\n          />\n        );\n      case 'error':\n        return (\n          <ErrorScreen\n            errorMessage={error || \"An unexpected error occurred.\"}\n            onTryAgainWithNewImage={resetToUpload}\n            onTryAnalyzingAgain={imageDataUri ? handleAnalyze : undefined}\n          />\n        );\n      case 'cameraCapture':\n        return (\n          <CameraCaptureScreen\n            videoRef={videoRef}\n            canvasRef={canvasRef}\n            onCapturePhoto={handleCapturePhoto}\n            onCloseCamera={handleCloseCamera}\n            hasCameraPermission={hasCameraPermission}\n            isInitializing={isCameraInitializing}\n            toast={toast}\n          />\n        );\n      default:\n        return <UploadScreen onFileUpload={handleFileChange} fileInputRef={fileInputRef} onOpenCamera={handleOpenCamera} />;\n    }\n  };\n\n  return (\n    <main className=\"flex flex-col items-center justify-center min-h-screen p-4 md:p-8 bg-background\">\n      <div className=\"w-full max-w-2xl\">\n        {renderScreen()}\n        {/* Hidden canvas for capturing photo */}\n        <canvas ref={canvasRef} style={{ display: 'none' }} />\n      </div>\n    </main>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA,uRAA8E,aAAa;AAC3F;AACA;;;AAbA;;;;;;;;;;;AAee,SAAS;;IACtB,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAc;IAC/D,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IAChE,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAA2B;IAClF,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IAClD,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAW;IACpD,MAAM,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,+HAAA,CAAA,WAAQ,AAAD;IAEzB,MAAM,eAAe,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAoB;IAC9C,MAAM,WAAW,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAoB;IAC1C,MAAM,YAAY,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAAqB;IAE5C,MAAM,CAAC,qBAAqB,uBAAuB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAkB;IAC/E,MAAM,CAAC,sBAAsB,wBAAwB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAW;IAE1E,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;8BAAE;YACR,IAAI,kBAAkB,iBAAiB;gBACrC,MAAM;8DAAsB;wBAC1B,wBAAwB;wBACxB,uBAAuB;wBACvB,IAAI,CAAC,UAAU,YAAY,IAAI,CAAC,UAAU,YAAY,CAAC,YAAY,EAAE;4BACnE,MAAM;gCACJ,SAAS;gCACT,OAAO;gCACP,aAAa;4BACf;4BACA,uBAAuB;4BACvB,wBAAwB;4BACxB,iBAAiB;4BACjB;wBACF;wBACA,IAAI;4BACF,MAAM,SAAS,MAAM,UAAU,YAAY,CAAC,YAAY,CAAC;gCAAE,OAAO;oCAAE,YAAY;gCAAc;4BAAE;4BAChG,IAAI,SAAS,OAAO,EAAE;gCACpB,SAAS,OAAO,CAAC,SAAS,GAAG;4BAC/B;4BACA,uBAAuB;wBACzB,EAAE,OAAO,KAAK;4BACZ,QAAQ,KAAK,CAAC,2BAA2B;4BACzC,uBAAuB;4BACvB,MAAM;gCACJ,SAAS;gCACT,OAAO;gCACP,aAAa;4BACf;wBACF,SAAU;4BACR,wBAAwB;wBAC1B;oBACF;;gBACA;gBAEA;0CAAO;wBACL,IAAI,SAAS,OAAO,IAAI,SAAS,OAAO,CAAC,SAAS,EAAE;4BAClD,MAAM,SAAS,SAAS,OAAO,CAAC,SAAS;4BACzC,OAAO,SAAS,GAAG,OAAO;sDAAC,CAAA,QAAS,MAAM,IAAI;;4BAC9C,SAAS,OAAO,CAAC,SAAS,GAAG;wBAC/B;oBACF;;YACF;QACF;6BAAG;QAAC;QAAe;KAAM;IAEzB,MAAM,gBAAgB,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;+CAAE;YAChC,gBAAgB;YAChB,oBAAoB;YACpB,SAAS;YACT,iBAAiB;YACjB,IAAI,aAAa,OAAO,EAAE;gBACxB,aAAa,OAAO,CAAC,KAAK,GAAG;YAC/B;YACA,IAAI,SAAS,OAAO,IAAI,SAAS,OAAO,CAAC,SAAS,EAAE;gBAChD,MAAM,SAAS,SAAS,OAAO,CAAC,SAAS;gBACzC,OAAO,SAAS,GAAG,OAAO;2DAAC,CAAA,QAAS,MAAM,IAAI;;gBAC9C,SAAS,OAAO,CAAC,SAAS,GAAG;YACjC;YACA,uBAAuB;QACzB;8CAAG,EAAE;IAEL,MAAM,mBAAmB,CAAC;QACxB,MAAM,OAAO,MAAM,MAAM,CAAC,KAAK,EAAE,CAAC,EAAE;QACpC,IAAI,MAAM;YACR,IAAI,KAAK,IAAI,GAAG,IAAI,OAAO,MAAM;gBAC/B,MAAM;oBACJ,OAAO;oBACP,aAAa;oBACb,SAAS;gBACX;gBACA;YACF;YACA,MAAM,SAAS,IAAI;YACnB,OAAO,SAAS,GAAG;gBACjB,gBAAgB,OAAO,MAAM;gBAC7B,iBAAiB;gBACjB,SAAS;YACX;YACA,OAAO,OAAO,GAAG;gBACf,SAAS;gBACT,iBAAiB;YACnB;YACA,OAAO,aAAa,CAAC;QACvB;IACF;IAEA,MAAM,gBAAgB;QACpB,IAAI,CAAC,cAAc;YACjB,SAAS;YACT,iBAAiB;YACjB;QACF;QAEA,iBAAiB;QACjB,aAAa;QACb,SAAS;QAET,IAAI;YACF,MAAM,QAAyC;gBAAE,mBAAmB;YAAa;YACjF,MAAM,SAAS,MAAM,CAAA,GAAA,2JAAA,CAAA,6BAA0B,AAAD,EAAE;YAEhD,MAAM,qBAAqB,OAAO,SAAS,CAAC,GAAG,CAAC,CAAA,MAAO,CAAC;oBACtD,GAAG,GAAG;oBACN,IAAI,CAAA,GAAA,wLAAA,CAAA,KAAM,AAAD;gBACX,CAAC;YAED,oBAAoB;gBAAE,GAAG,MAAM;gBAAE,WAAW;YAAmB;YAC/D,iBAAiB;QACnB,EAAE,OAAO,GAAQ;YACf,QAAQ,KAAK,CAAC,oBAAoB;YAClC,SAAS,EAAE,OAAO,IAAI;YACtB,iBAAiB;QACnB,SAAU;YACR,aAAa;QACf;IACF;IAEA,MAAM,2BAA2B,CAAC;QAChC,oBAAoB;IACtB;IAEA,MAAM,mBAAmB;QACvB,iBAAiB;IACnB;IAEA,MAAM,qBAAqB;QACzB,IAAI,SAAS,OAAO,IAAI,UAAU,OAAO,IAAI,qBAAqB;YAChE,MAAM,QAAQ,SAAS,OAAO;YAC9B,MAAM,SAAS,UAAU,OAAO;YAEhC,MAAM,SAAS,MAAM,SAAS;YAC9B,IAAI,CAAC,QAAQ;gBACX,SAAS;gBACT,iBAAiB;gBACjB;YACF;YACA,MAAM,QAAQ,OAAO,cAAc,EAAE,CAAC,EAAE;YACxC,MAAM,WAAW,MAAM,WAAW;YAElC,OAAO,KAAK,GAAG,SAAS,KAAK,IAAI,MAAM,UAAU;YACjD,OAAO,MAAM,GAAG,SAAS,MAAM,IAAI,MAAM,WAAW;YAEpD,MAAM,UAAU,OAAO,UAAU,CAAC;YAClC,IAAI,SAAS;gBACX,qFAAqF;gBACrF,wCAAwC;gBACxC,wCAAwC;gBACxC,0BAA0B;gBAC1B,IAAI;gBACJ,QAAQ,SAAS,CAAC,OAAO,GAAG,GAAG,OAAO,KAAK,EAAE,OAAO,MAAM;gBAC1D,MAAM,UAAU,OAAO,SAAS,CAAC;gBAEjC,IAAI,SAAS,OAAO,IAAI,SAAS,OAAO,CAAC,SAAS,EAAE;oBAChD,MAAM,SAAS,SAAS,OAAO,CAAC,SAAS;oBACzC,OAAO,SAAS,GAAG,OAAO,CAAC,CAAA,QAAS,MAAM,IAAI;oBAC9C,SAAS,OAAO,CAAC,SAAS,GAAG;gBACjC;gBAEA,gBAAgB;gBAChB,iBAAiB;gBACjB,SAAS;gBACT,uBAAuB,OAAO,yBAAyB;YACzD,OAAO;gBACL,SAAS;gBACT,iBAAiB;YACnB;QACF,OAAO;YACL,SAAS;YACT,iBAAiB;QACnB;IACF;IAEA,MAAM,oBAAoB;QACxB,IAAI,SAAS,OAAO,IAAI,SAAS,OAAO,CAAC,SAAS,EAAE;YAChD,MAAM,SAAS,SAAS,OAAO,CAAC,SAAS;YACzC,OAAO,SAAS,GAAG,OAAO,CAAC,CAAA,QAAS,MAAM,IAAI;YAC9C,SAAS,OAAO,CAAC,SAAS,GAAG;QACjC;QACA,iBAAiB;QACjB,uBAAuB;IACzB;IAEA,MAAM,eAAe;QACnB,OAAQ;YACN,KAAK;gBACH,qBACE,6LAAC,oJAAA,CAAA,UAAY;oBACX,cAAc,CAAC,QAAU,iBAAiB;oBAC1C,cAAc;oBACd,cAAc;;;;;;YAGpB,KAAK;gBACH,qBACE,6LAAC,8JAAA,CAAA,UAAkB;oBACjB,cAAc;oBACd,WAAW;oBACX,UAAU;;;;;;YAGhB,KAAK;gBACH,qBAAO,6LAAC,wJAAA,CAAA,UAAgB;;;;;YAC1B,KAAK;gBACH,qBACE,6LAAC,qJAAA,CAAA,UAAa;oBACZ,kBAAkB;oBAClB,eAAe;oBACf,eAAe;oBACf,0BAA0B;;;;;;YAGhC,KAAK;gBACH,qBACE,6LAAC,mJAAA,CAAA,UAAW;oBACV,cAAc,SAAS;oBACvB,wBAAwB;oBACxB,qBAAqB,eAAe,gBAAgB;;;;;;YAG1D,KAAK;gBACH,qBACE,6LAAC,+JAAA,CAAA,UAAmB;oBAClB,UAAU;oBACV,WAAW;oBACX,gBAAgB;oBAChB,eAAe;oBACf,qBAAqB;oBACrB,gBAAgB;oBAChB,OAAO;;;;;;YAGb;gBACE,qBAAO,6LAAC,oJAAA,CAAA,UAAY;oBAAC,cAAc;oBAAkB,cAAc;oBAAc,cAAc;;;;;;QACnG;IACF;IAEA,qBACE,6LAAC;QAAK,WAAU;kBACd,cAAA,6LAAC;YAAI,WAAU;;gBACZ;8BAED,6LAAC;oBAAO,KAAK;oBAAW,OAAO;wBAAE,SAAS;oBAAO;;;;;;;;;;;;;;;;;AAIzD;GArQwB;;QAMJ,+HAAA,CAAA,WAAQ;;;KANJ","debugId":null}}]
}